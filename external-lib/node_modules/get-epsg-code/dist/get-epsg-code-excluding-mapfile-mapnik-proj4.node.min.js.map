{"version":3,"sources":["webpack://get-epsg-code/webpack/universalModuleDefinition","webpack://get-epsg-code/webpack/bootstrap","webpack://get-epsg-code/./node_modules/xml-utils/src/find-tag-by-name.js","webpack://get-epsg-code/./src/index.js","webpack://get-epsg-code/./node_modules/xml-utils/src/find-tag-by-path.js","webpack://get-epsg-code/./node_modules/xml-utils/src/find-tags-by-path.js","webpack://get-epsg-code/./node_modules/xml-utils/src/find-tags-by-name.js","webpack://get-epsg-code/./node_modules/xml-utils/src/index-of-match.js","webpack://get-epsg-code/./clean-esriwkt.js","webpack://get-epsg-code/./globals.js","webpack://get-epsg-code/./crs.dat","webpack://get-epsg-code/./node_modules/arraybuffer-loader/lib/to-array-buffer.js","webpack://get-epsg-code/./utils.js","webpack://get-epsg-code/./node_modules/wkt-parser/parser.js","webpack://get-epsg-code/./node_modules/wkt-parser/process.js","webpack://get-epsg-code/./node_modules/wkt-parser/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","indexOfMatch","xml","tagName","options","debug","startIndex","console","log","start","end","length","slice","outer","inner","indexOf","lastIndexOf","findTagByPath","require","findTagByName","getAttribute","parseWKT","clean_esriwkt","EXCLUDED_FORMATS","ARRAY_TYPE","BYTES_PER_VALUE","DATA_VIEW_READER_NAME","FORMATS","HASHED_FIELDS","NUM_FIELDS","UNSUPPORTED_MSG","NUM_HASHED_FIELDS","ESRI_WKT","GEOSERVER","MAPFILE","MAPNIK","OGC_GML","OGC_XML","OGC_WKT","POSTGIS","PROJ_4","PROJ_4_JS","arrayBuffer","view","DataView","hash","codeWords","getDataType","input","trim","startsWith","some","word","includes","testWKT","test","endsWith","lookup","dataType","hashed","offset","byteOffset","byteLength","getEPSGCode","toLowerCase","Error","replace","parsed","AUTHORITY","authority","Number","epsg","EPSG","match","last_part","split","pop","zone","substring","hemisphere","substr","parseInt","identifier","find","part","exec","map","window","findTagsByPath","path","found","returnOnFirst","Array","isArray","findTagsByName","tags","shift","pathIndex","allSubTags","tagIndex","tag","subTags","forEach","subTag","concat","push","pattern","RegExp","index","esriwkt","DEFAULT_HASHED_FIELDS","process","env","sort","Int16Array","base64Data","binary","atob","Buffer","from","toString","bytes","Uint8Array","charCodeAt","buffer","string","Math","round","pow","txt","Parser","output","whitespace","latin","keyword","endThings","digets","text","level","place","stack","currentObject","state","mapit","obj","unshift","thing","out","reduce","newObj","item","sExpr","v","convert","a","rf","readCharicter","char","neutral","quoted","afterquote","number","afterItem","parseFloat","newObjects","d2r","lisp","parser","wkt","type","projName","local","PROJECTION","keys","UNIT","units","DATUM","SPHEROID","to_meter","geogcs","GEOGCS","toMeter","datumCode","sphere","ellps","TOWGS84","datum_params","b","isFinite","outName","params","inName","long0","longc","lat_ts","lat1","lat0","cleanWKT"],"mappings":"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","file":"get-epsg-code-excluding-mapfile-mapnik-proj4.node.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"get-epsg-code\"] = factory();\n\telse\n\t\troot[\"get-epsg-code\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const indexOfMatch = require('./index-of-match.js');\n\nfunction findTagByName(xml, tagName, options) {\n  const debug = options && options.debug || false;\n\n  const startIndex = options && options.startIndex || 0;\n\n  if (debug) console.log(\"starting findTag with\", tagName, \" and \", options);\n\n  const start = indexOfMatch(xml, `\\<${tagName}[ \\>]`, startIndex);\n  if (debug) console.log(\"start:\", start);\n  if (start === -1) return undefined;\n\n  const end = start + tagName.length + indexOfMatch(xml.slice(start + tagName.length), \"[ \\/]\" + tagName + \">\", 0) + 1 + tagName.length + 1;\n  if (debug) console.log(\"end:\", end);\n  if (end === -1) return undefined;\n\n  const outer = xml.slice(start, end);\n  // tag is like <gml:identifier codeSpace=\"OGP\">urn:ogc:def:crs:EPSG::32617</gml:identifier>\n\n  const inner = outer.slice(outer.indexOf(\">\") + 1, outer.lastIndexOf(\"<\"));\n\n  return { inner, outer, start, end };\n}\n\nmodule.exports = findTagByName;\n","const findTagByPath = require('xml-utils/src/find-tag-by-path');\nconst findTagByName = require('xml-utils/src/find-tag-by-name');\nconst getAttribute = require('xml-utils/src/get-attribute');\nconst parseWKT = require('wkt-parser').default;\nconst clean_esriwkt = require('../clean-esriwkt');\n\nconst {\n  ARRAY_TYPE,\n  EXCLUDED_FORMATS,\n  BYTES_PER_VALUE,\n  DATA_VIEW_READER_NAME,\n  FORMATS,\n  HASHED_FIELDS,\n  NUM_FIELDS,\n  NUM_HASHED_FIELDS,\n  UNSUPPORTED_MSG\n} = require('../globals.js');\n\nconst {\n  ESRI_WKT,\n  GEOSERVER,\n  MAPFILE,\n  MAPNIK,\n  OGC_GML,\n  OGC_XML,\n  OGC_WKT,\n  POSTGIS,\n  PROJ_4,\n  PROJ_4_JS\n} = FORMATS;\n\nconst arrayBuffer = require('../crs.dat');\n\nconst view = new DataView(arrayBuffer);\n\nconst { hash } = require('../utils.js');\n\nconst hash2code = {};\n\n// from proj4js\nconst codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\n\nfunction testWKT(input){\n  // clean any blank spaces in beginning\n  input = input.trim();\n\n  if (input.startsWith('PROJCS[') || input.startsWith('GEOGCS[')) {\n    return codeWords.some(word => input.includes(word));\n  } else {\n    return false;\n  }\n}\n\nfunction getDataType(input) {\n  // check WKT\n  if (testWKT(input)) {\n    if (input.includes(\"AUTHORITY\")) {\n      return OGC_WKT;\n    } else {\n      // appears to be ESRI WKT\n      return ESRI_WKT;\n    }\n  } else if (input.includes(\"gml:ProjectedCRS\") || input.includes(\"gml:GeodeticCRS\") || input.includes(\"gml:GeographicCRS\")) {\n    if (input.includes(\"gml:srsID\")) {\n      return OGC_XML;\n    } else {\n      return OGC_GML;\n    }\n  } else if (input.startsWith(\"+proj=\")) {\n    return PROJ_4;\n  } else if (input.startsWith(`proj4.defs(\"EPSG:`)) {\n    return PROJ_4_JS;\n  } else if (/^\\d{1,6}\\=(PROJCS|GEOGCS)/.test(input)) {\n    return GEOSERVER;\n  } else if (input.startsWith(\"PROJECTION\") && input.endsWith(\"END\")) {\n    return MAPFILE;\n  } else if (input.endsWith('</Map>')) {\n    return MAPNIK;\n  } else if (input.startsWith('INSERT')) {\n    return POSTGIS;\n  } else {\n    return \"SOMETHING ELSE\";\n  }\n}\n\nfunction lookup(input, dataType, debug) {\n  if (debug) console.log(\"looking up \" + dataType);\n\n  const hashed = hash(input);\n  if (debug) console.log(\"hashed:\", hashed);\n\n  const offset = HASHED_FIELDS.indexOf(dataType) + 1;\n  if (debug) console.log(\"offset:\", offset);\n\n  for (let byteOffset = offset * BYTES_PER_VALUE; byteOffset < arrayBuffer.byteLength; byteOffset += NUM_FIELDS * BYTES_PER_VALUE) {\n    const value = view[DATA_VIEW_READER_NAME](byteOffset, true);\n    if (hashed === value) {\n      return view[DATA_VIEW_READER_NAME](byteOffset - offset * BYTES_PER_VALUE, true);\n    }\n  }\n}\n\nfunction getEPSGCode(input, options) {\n  //console.log(\"starting get-epsg-code with\", input, options);\n  var debug = options && options.debug ? options.debug : false;\n\n  const dataType = getDataType(input);\n  if (debug) console.log(\"dataType:\", dataType);\n\n  if (debug) console.log(\"EXCLUDED_FORMATS:\", EXCLUDED_FORMATS);\n  if (EXCLUDED_FORMATS.includes(dataType.toLowerCase())) {\n    throw new Error(UNSUPPORTED_MSG.replace(\"{}\", dataType));\n  }\n\n  if (dataType === OGC_WKT) {\n    const parsed = parseWKT(input);\n    if (debug) console.log(\"parsed:\", parsed);\n    if (parsed.AUTHORITY) {\n      const authority = parsed.AUTHORITY;\n      return Number(authority.epsg || authority.EPSG);\n    }\n  } else if (dataType == ESRI_WKT) {\n    const parsed = parseWKT(input);\n    if (debug) console.log(\"parsed:\", parsed);\n    if (parsed.name.match(/^WGS_1984_UTM_Zone_\\d{1,2}(N|S)$/)) {\n      const last_part = parsed.name.split(\"_\").pop();\n      const zone = last_part.substring(0, last_part.length - 1);\n      const hemisphere = last_part.substr(-1) == 'N' ? 6 : 7;\n      return Number.parseInt('32' + hemisphere + zone);\n    } else {\n\n      input = clean_esriwkt(input);\n\n      return lookup(input, ESRI_WKT, false);\n    }\n  } else if (dataType === OGC_GML) {\n    const identifier = findTagByName(input, \"gml:identifier\", { debug }).inner;\n    return Number(identifier.replace(\"urn:ogc:def:crs:EPSG::\", \"\"));\n  } else if (dataType === OGC_XML) {\n    return Number(findTagByPath(input, [\"gml:srsID\", \"gml:name\"], { debug }).inner);\n  } else if (dataType === PROJ_4) {\n    if (input.startsWith('+proj=utm')) {\n      const parts = input.split(\" \");\n      const zone = parts.find(part => part.startsWith('+zone=')).split(\"=\")[1];\n      const hemisphere = input.includes('+south') ? '7' : '6';\n      return Number.parseInt('32' + hemisphere + zone);\n    } else {\n      return lookup(input, PROJ_4);\n    }\n  } else if (dataType === PROJ_4_JS) {\n    return Number(input.substring(17, input.indexOf(`\"`, 17)));\n  } else if (dataType === GEOSERVER) {\n    return Number(input.match(/^\\d{1,6}/)[0]);\n  } else if (dataType === MAPFILE) {\n    if (input.includes('init=epsg:')) {\n      return Number.parseInt(/(\"init\\=epsg:)(\\d{1,10})(\")/.exec(input)[2]);\n    } else if (input.includes('\"proj=utm\"')) {\n      const zone = /(\"zone\\=)(\\d{1,2})(\")/.exec(input)[2];\n      const hemisphere = input.includes('\"south\"') ? '7' : '6';\n      return Number.parseInt('32' + hemisphere + zone);\n    } else {\n      return lookup(input, MAPFILE);\n    }\n  } else if (dataType === MAPNIK) {\n    const map = findTagByName(input, 'Map');\n    const srs = getAttribute(map.outer, 'srs'); // Proj.4 String\n    return getEPSGCode(srs);\n  } else if (dataType === POSTGIS) {\n    return Number(input.substring(input.indexOf(\"values (\") + 8, input.indexOf(\"EPSG\") - 3).trim());\n  }\n};\n\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = getEPSGCode;\n}\nif (typeof window !== 'undefined') {\n  window['getEPSGCode'] = getEPSGCode;\n} else if (typeof self !== 'undefined') {\n  self['getEPSGCode'] = getEPSGCode; // jshint ignore:line\n}\n","const findTagsByPath = require('./find-tags-by-path.js');\n\nfunction findTagByPath(xml, path, options) {\n  const debug = options && options.debug || false;\n  const found = findTagsByPath(xml, path, { debug, returnOnFirst: true });\n  if (Array.isArray(found) && found.length === 1) return found[0];\n  else return undefined;\n}\nmodule.exports = findTagByPath;\n","const findTagsByName = require('./find-tags-by-name.js');\n\nfunction findTagsByPath(xml, path, options) {\n  const debug = options && options.debug || false;\n  const returnOnFirst = options && options.returnOnFirst || false;\n  let tags = findTagsByName(xml, path.shift(), { debug });\n  if (debug) console.log(\"first tags are:\", tags);\n  for (let pathIndex = 0; pathIndex < path.length; pathIndex++) {\n    const tagName = path[pathIndex];\n    let allSubTags = [];\n    for (let tagIndex = 0; tagIndex < tags.length; tagIndex++) {\n      const tag = tags[tagIndex];\n      const subTags = findTagsByName(tag.outer, tagName, { debug, startIndex: 1 });\n      if (subTags.length > 0) {\n        subTags.forEach(subTag => {\n            subTag.start += tag.start,\n            subTag.end += tag.start\n        });\n        if (returnOnFirst && pathIndex === path.length - 1) return [subTags[0]];\n        allSubTags = allSubTags.concat(subTags);\n\n      }\n    }\n    tags = allSubTags;\n  }\n  return tags;\n}\n\nmodule.exports = findTagsByPath;\n","const findTagByName = require(\"./find-tag-by-name.js\");\n\nfunction findTagsByName(xml, tagName, options) {\n  const tags = [];\n  const debug = options && options.debug || false;\n  let startIndex = options && options.startIndex || 0;\n  let tag;\n  while (tag = findTagByName(xml, tagName, { debug, startIndex })) {\n    startIndex = tag.end;\n    tags.push(tag);\n  }\n  return tags;\n}\n\nmodule.exports = findTagsByName;","function indexOfMatch(xml, pattern, startIndex) {\n  const re = new RegExp(pattern);\n  const match = re.exec(xml.slice(startIndex));\n  if (match) return startIndex + match.index;\n  else return -1;\n}\n\nmodule.exports = indexOfMatch;","module.exports = function clean_esriwkt(esriwkt) {\n    esriwkt = esriwkt.replace(`DATUM[\"D_`, `DATUM[\"`);\n  \n    // reduce precision of decimal numbers to 15 digits\n    esriwkt = esriwkt.replace(/\\.\\d{16,}/g, n => n.substr(0, 16));\n  \n    return esriwkt;\n}","const DEFAULT_HASHED_FIELDS = ['esriwkt', 'mapfile', 'proj4'];\n\nlet HASHED_FIELDS = DEFAULT_HASHED_FIELDS;\nif (typeof process !== \"undefined\" && process.env && process.env.HASHED_FIELDS) {\n  HASHED_FIELDS = process.env.HASHED_FIELDS.split(',');\n}\n\nlet EXCLUDED_FORMATS = [];\nif (typeof process !== \"undefined\" && process.env && process.env.EXCLUDED_FORMATS) {\n  EXCLUDED_FORMATS = process.env.EXCLUDED_FORMATS.split(',');\n}\n\nif (!HASHED_FIELDS.includes('esriwkt')) EXCLUDED_FORMATS.push('esriwkt');\nif (!HASHED_FIELDS.includes('mapfile')) EXCLUDED_FORMATS.push('mapfile');\nif (!HASHED_FIELDS.includes('proj4')) {\n  EXCLUDED_FORMATS.push('mapnik'); // mapnik parsing depends on proj4\n  EXCLUDED_FORMATS.push('proj4');\n}\nEXCLUDED_FORMATS.sort();\n\nconst NUM_HASHED_FIELDS = HASHED_FIELDS.length;\nconst NUM_FIELDS = NUM_HASHED_FIELDS + 1; // adding one for epsg code field\nconst ARRAY_TYPE = Int16Array;\nconst DATA_VIEW_READER_NAME = \"getInt16\";\nconst BYTES_PER_VALUE = 2;\n\nconst UNSUPPORTED_MSG = \"[get-epsg-code] {} format not supported\";\n\nconst FORMATS = {\n  ESRI_WKT: 'esriwkt',\n  GEOSERVER: 'geoserver',\n  MAPFILE: 'mapfile',\n  MAPNIK: 'mapnik',\n  OGC_GML: 'gml',\n  OGC_XML: 'xml',\n  OGC_WKT: 'wkt',\n  POSTGIS: 'postgis',\n  PROJ_4: 'proj4',\n  PROJ_4_JS: 'js'\n};\n\nmodule.exports = {\n  ARRAY_TYPE,\n  DATA_VIEW_READER_NAME,\n  BYTES_PER_VALUE,\n  DEFAULT_HASHED_FIELDS,\n  EXCLUDED_FORMATS,\n  FORMATS,\n  HASHED_FIELDS,\n  NUM_HASHED_FIELDS,\n  NUM_FIELDS,\n  UNSUPPORTED_MSG  \n};\n","module.exports = require(\"./node_modules/arraybuffer-loader/lib/to-array-buffer.js\")(\"\")","'use strict'\n\nmodule.exports = function (base64Data) {\n  var isBrowser = typeof window !== 'undefined' && typeof window.atob === 'function'\n  var binary = isBrowser ? window.atob(base64Data) : Buffer.from(base64Data, 'base64').toString('binary')\n  var bytes = new Uint8Array(binary.length)\n\n  for (var i = 0; i < binary.length; ++i) {\n    bytes[i] = binary.charCodeAt(i)\n  }\n\n  return bytes.buffer\n}\n","function hash(string) {\n  // sometimes might have extra space at end from epsg.io\n  string = string.trim();\n\n  // remove any extra spaces\n  string = string.replace(/  /g, ' ');\n\n  let hash = 0, i, chr;\n  if (string.length === 0) return hash;\n  const string_length = string.length;\n  for (i = 0; i < string.length; i++) {\n    chr = string.charCodeAt(i);\n    hash = ((hash << 5) - hash) + chr;\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  // convert to 16-bit\n  hash = Math.round(hash / Math.pow(2, 16));\n\n  return hash;\n}\n\nmodule.exports = { hash };","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n"],"sourceRoot":""}