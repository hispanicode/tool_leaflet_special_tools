"use strict";

var _addAlpha = _interopRequireDefault(require("./add-alpha"));

var _hasNoData = _interopRequireDefault(require("./has-no-data"));

var _hideRgba = _interopRequireDefault(require("./hide-rgba"));

var _isHidden = _interopRequireDefault(require("./is-hidden"));

var _isNoData = _interopRequireDefault(require("./is-no-data"));

var _makeNoDataRgb = _interopRequireDefault(require("./make-no-data-rgb"));

var _makeNoDataRgba = _interopRequireDefault(require("./make-no-data-rgba"));

var _fit = _interopRequireDefault(require("./fit"));

var _popAlpha = _interopRequireDefault(require("./pop-alpha"));

var _range = _interopRequireDefault(require("./range"));

var _rawToRgb = _interopRequireDefault(require("./raw-to-rgb"));

var _rawToRgba = _interopRequireDefault(require("./raw-to-rgba"));

var _rgbToRgba = _interopRequireDefault(require("./rgb-to-rgba"));

var _rgbaToRgb = _interopRequireDefault(require("./rgba-to-rgb"));

var _setHidden = _interopRequireDefault(require("./set-hidden"));

var _setVisible = _interopRequireDefault(require("./set-visible"));

var _showRgba = _interopRequireDefault(require("./show-rgba"));

var _sliceAlpha = _interopRequireDefault(require("./slice-alpha"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const pixelUtils = {
  addAlpha: _addAlpha.default,
  fit: _fit.default,
  hasNoData: _hasNoData.default,
  hideRgba: _hideRgba.default,
  isHidden: _isHidden.default,
  isNoData: _isNoData.default,
  makeNoDataRgb: _makeNoDataRgb.default,
  makeNoDataRgba: _makeNoDataRgba.default,
  popAlpha: _popAlpha.default,
  range: _range.default,
  rawToRgb: _rawToRgb.default,
  rawToRgba: _rawToRgba.default,
  rgbToRgba: _rgbToRgba.default,
  rgbaToRgb: _rgbaToRgb.default,
  setHidden: _setHidden.default,
  setVisible: _setVisible.default,
  showRgba: _showRgba.default,
  sliceAlpha: _sliceAlpha.default
};
if (typeof define === "function" && define.amd) define(() => pixelUtils);
if (typeof module === "object") module.exports = pixelUtils;
if (typeof window === "object") window.pixelUtils = pixelUtils;
if (typeof self === "object") self.pixelUtils = pixelUtils;