(()=>{var t={857:(t,e,n)=>{const r=n(490),o=n(850),s=n(31),i=n(235),a=n(811),c=n(894),l=n(640),u=n(967),f=n(626),g=n(720),h=n(874);t.exports=function({raster_bbox:t,raster_height:e,raster_width:n,pixel_height:p,pixel_width:d,geometry:m,per_pixel:x,per_row_segment:b}){const[w,y,_,v]=t,k=[];if(0!==e){for(let t=0;t<e;t++){const e=v-p*t-p/2,n=r([w,e],[w+1,e]);k.push(n)}u(m).map(c).forEach((c=>{const u=h(e).map((()=>[])),m=c.length;for(let n=0;n<m;n++){const o=c[n],[i,a]=o,[f,g]=i,[h,d]=a,m=Math.sign(d-g),x=g===d,b=f===h,w=g,y=r(i,a),_=Math.min(g,d),v=Math.max(g,d);let j,N,S,M;if(f<h?([j,N]=i,[M,S]=a):([j,N]=a,[M,S]=i),void 0===j)throw Error("startLng is "+j);const O=Math.round((t[3]-.5*p-N)/p),A=Math.round((t[3]-.5*p-S)/p);let E,L;O<A?(E=O,L=A):(E=A,L=O),E=s(E,0,e-1),L=s(L,0,e-1);for(let t=E;t<L+1;t++){const e=k[t];if(void 0===e)throw console.error("j:",t),console.error("imageLines:",k),Error("imageLines");const r=-1*e.c,s=g===r,i=d===r,a=!i;let c,p;if(x){if(w!==r)continue;c=j,p=M}else if(b)r>=_&&r<=v&&(c=j,p=M);else if(s)c=p=f;else if(i)c=p=h;else try{c=p=l(y,e).x}catch(t){throw t}c&&p&&(x||c>=j&&p<=M&&r<=v&&r>=_)&&u[t].push({direction:m,index:n,edge:o,endsOnLine:i,endsOffLine:a,horizontal:x,startsOnLine:s,vertical:b,xmin:c,xmax:p,imageLineY:r})}}u.map(((t,e)=>{if(t.length>0){const r=a(t,m).map(o),[s,c]=g(r,(t=>t.through));if(s.length%2==1)throw Error("throughs.length for "+e+" is odd with "+s.length);let l=c.map((t=>[t.xmin,t.xmax]));s.sort(((t,e)=>t.xmin-e.xmin));const u=i(s).map((t=>{const[e,n]=t;return[e.xmin,n.xmax]}));l=l.concat(u),l=f(l),l.forEach((t=>{const[r,o]=t,s=Math.round((r-(w+.5*d))/d),i=Math.round((o-(w+.5*d))/d);if(s>=n)return;if(i<0)return;const a=Math.max(s,0),c=Math.min(i,n-1);if(b&&b({row:e,columns:[a,c]}),x)for(let t=a;t<=c;t++)x({row:e,column:t})}))}}))}))}}},809:(t,e,n)=>{const r=n(857),o=n(91),s=n(691);t.exports=function({debug:t=!1,raster_bbox:e,raster_height:n,raster_width:i,pixel_height:a,pixel_width:c,geometry:l,per_pixel:u,per_row_segment:f}){const[g,h,p,d]=e;a??=(d-h)/n,c??=(p-g)/i;const m=new Array(n);r({raster_bbox:e,raster_height:n,raster_width:i,pixel_height:a,pixel_width:c,geometry:l,per_pixel:u,per_row_segment:({row:t,columns:e})=>{m[t]||(m[t]=[]),m[t].push(e),f&&f({row:t,columns:e})}});for(let t=0;t<m.length;t++){const e=m[t];e&&(e.sort(((t,e)=>t===e?t[1]-e[1]:t[0]-e[0])),m[t]=s(e))}return t&&o(insides),{rows:m}}},850:t=>{t.exports=function(t){try{let e,n,r;const o=t.length,s=t[0];if(1===o)e=!0,n=s.xmin,r=s.xmax;else{const i=t[o-1];e=s.direction===i.direction,n=Math.min(s.xmin,i.xmin),r=Math.max(s.xmax,i.xmax)}if(void 0===n||void 0===r||void 0===e||isNaN(n)||isNaN(r))throw Error("categorizeIntersection failed with xmin",n,"and xmax",r);return{xmin:n,xmax:r,through:e}}catch(e){throw console.error("[categorizeIntersection] segments:",t),console.error("[categorizeIntersection]",e),e}}},91:t=>{t.exports=function(t){t.forEach(((t,e)=>{for(let n=0;n<t.length;n++){const r=t[n],[o,s]=r;o>s&&console.warn("[dufour-peyton-intersection] uh oh, encountered invalid range",r,"at row index",e,"with ranges",t);for(let r=n+1;r<t.length;r++)r[0]<=s&&console.warn("[dufour-peyton-intersection] encountered range problem on row index",e,":",t)}}))}},31:t=>{t.exports=function(t,e,n){return t<e?e:t>n?n:t}},811:(t,e,n)=>{const r=n(59);t.exports=function(t,e,n=!1){try{const n=r(t,(t=>t.endsOffLine));if(n.length>=2){const t=n[0],r=t[0],o=n[n.length-1],s=o[o.length-1];s.index===e-1&&0===r.index&&s.endsOnLine&&(n[0]=n.pop().concat(t))}return n}catch(t){console.error("[clusterLineSegments]",t)}}},59:t=>{t.exports=function(t,e){try{const n=t.length,r=[];let o=[];for(let s=0;s<n;s++){const n=t[s];o.push(n),e(n)&&(r.push(o),o=[])}return o.length>0&&r.push(o),r}catch(t){console.error("[cluster]:",t)}}},235:t=>{t.exports=function(t){const e=[],n=t.length;for(let r=0;r<n;r+=2)e.push([t[r],t[r+1]]);return e}},257:t=>{t.exports=function(t,e){t.forEach((t=>{for(let n=1;n<t.length;n++){const r=t[n-1],o=t[n];e([r,o],n-1)}}))}},721:(t,e,n)=>{const r=n(155);t.exports=function t(e,n){if("FeatureCollection"===e.type)e.features.forEach((e=>t(e,n)));else if("Feature"===e.type)t(e.geometry,n);else if("Polygon"===e.type)t(e.coordinates,n);else if("MultiPolygon"===e.type)e.coordinates.forEach((t=>{n(t)}));else if(Array.isArray(e)){const t=r(e);4===t?e.forEach((t=>{n(t)})):3===t&&n(e)}}},793:(t,e,n)=>{const r=n(721);t.exports=function(t){let e,n,o,s;return r(t,(t=>{const r=t[0],i=r.length-1;let a;for(void 0===e?(e=o=r[0][0],n=s=r[0][1],a=1):a=0;a<=i;a++){const[t,i]=r[a];t<e?e=t:t>o&&(o=t),i<n?n=i:i>s&&(s=i)}})),[e,n,o,s]}},894:(t,e,n)=>{const r=n(257);t.exports=function(t){const e=[];return r(t,(t=>e.push(t))),e}},640:t=>{t.exports=function(t,e){const n=t.a*e.b-e.a*t.b;if(n)return{x:(e.b*t.c-t.b*e.c)/n,y:(t.a*e.c-e.a*t.c)/n}}},490:t=>{t.exports=function(t,e){const[n,r]=t,[o,s]=e,i=s-r,a=n-o;return{a:i,b:a,c:i*n+a*r}}},967:(t,e,n)=>{const r=n(721);t.exports=function(t){const e=[];return r(t,(t=>e.push(t))),e}},446:(t,e,n)=>{var r;const o=n(850),s=n(31),i=n(59),a=n(811),c=n(809),l=n(857),u=n(235),f=n(793),g=n(967),h={calculate:c,calculateCore:l,categorizeIntersection:o,clamp:s,cluster:i,clusterLineSegments:a,couple:u,eachEdge:n(257),getBoundingBox:f,getIntersectionOfTwoLines:n(640),getLineFromPoints:n(490),getPolygons:g,mergeRanges:n(626),partition:n(720),range:n(874)};void 0===(r=(()=>h).call(e,n,e,t))||(t.exports=r),t.exports=h,"object"==typeof self&&(self.dufour_peyton_intersection=h),"object"==typeof window&&(window.dufour_peyton_intersection=h)},691:t=>{t.exports=function(t){const e=t.length;if(e>0){const n=t[0];let r=n[1];const o=[n];for(let n=1;n<e;n++){const e=t[n],[s,i]=e;s<=r+1?o[o.length-1][1]=i:o.push(e),r=i}return o}}},626:t=>{t.exports=function(t){const e=t.length;if(e>0){const n=t[0];let r=n[1];const o=[n];for(let n=1;n<e;n++){const e=t[n],[s,i]=e;s<=r?o[o.length-1][1]=i:o.push(e),r=i}return o}}},720:t=>{t.exports=function(t,e){const n=[],r=[],o=t.length;for(let s=0;s<o;s++){const o=t[s];e(o)?n.push(o):r.push(o)}return[n,r]}},874:t=>{t.exports=function(t){const e=new Array(t);for(let n=0;n<t;n++)e[n]=n;return e}},143:(t,e,n)=>{const r=n(446),o=n(42),s=n(89),i=n(482),a=n(905);function c({rows:t}){t.forEach(((t,e)=>{t&&t.forEach((([t,n],r)=>{if(t>n)throw Error(`uh oh: invalid segment at row ${e}, segment ${r}`)}))}))}function l({debug:t=!1,raster_bbox:e,raster_height:n,raster_width:a,pixel_height:l,pixel_width:u,mask:f,reproject:g}){"function"==typeof g&&(f=i(f,{in_place:!1,reproject:g})),void 0===l&&(l=Number(s(o(e[3].toString(),e[1].toString()),n.toString()))),void 0===u&&(u=Number(s(o(e[2].toString(),e[0].toString()),a.toString())));const{rows:h}=r.calculate({raster_bbox:e,raster_height:n,raster_width:a,pixel_height:l,pixel_width:u,geometry:f});return t&&c({rows:h}),{rows:h}}const u={inside:l,outside:function({debug:t=!1,raster_bbox:e,raster_height:n,raster_width:r,pixel_height:u,pixel_width:f,mask:g,reproject:h}){"function"==typeof h&&(g=i(g,{in_place:!1,reproject:h})),void 0===u&&(u=Number(s(o(e[3].toString(),e[1].toString()),n.toString()))),void 0===f&&(f=Number(s(o(e[2].toString(),e[0].toString()),r.toString())));const{rows:p}=l({debug:t,raster_bbox:e,raster_height:n,raster_width:r,pixel_height:u,pixel_width:f,mask:g});t&&c({rows:p});const d=r-1,m=[];for(let t=0;t<p.length;t++){const e=p[t];Array.isArray(e)&&0!==e.length?m.push(a({segments:e,min:0,max:d,debug:!1})):m.push([[0,d]])}return t&&c({rows:m}),{rows:m}}};t.exports=u},155:t=>{t.exports=function(t){const e=t=>Array.isArray(t)||t instanceof Int8Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray||t instanceof Int16Array||t instanceof Uint16Array||t instanceof Int32Array||t instanceof Uint32Array||t instanceof Float32Array||t instanceof Float64Array||t instanceof BigInt64Array||t instanceof BigUint64Array;let n=0,r=t;for(;e(r);)n++,r=r[0];return n}},585:(t,e,n)=>{const r=n(875);t.exports=function(t){return"-"===(t=r(t))[0]?t.substring(1):t}},316:(t,e,n)=>{const r=n(232),o=n(875),s=n(888),i=n(411);t.exports=function(t,e){t=o(t),e=o(e);const n="-"!==t[0],a="-"!==e[0];if(n&&a)return s(t,e);if(!n&&!a)return"-"+s(t.substring(1),e.substring(1));if(!n&&a)switch(t=t.substring(1),r(t,e)){case"=":return"0";case"<":return i(e,t);case">":return"-"+i(t,e)}else if(n&&!a)switch(e=e.substring(1),r(t,e)){case"=":return"0";case"<":return"-"+i(e,t);case">":return i(t,e)}}},875:(t,e,n)=>{const r=n(604);t.exports=function(t){return"+"===t[0]&&(t=t.substring(1)),(t=r(t)).replace(/^0+(?=\d)/,"")}},232:(t,e,n)=>{n(875),t.exports=function(t,e){const n=t.length,r=e.length,o=t.indexOf("."),s=e.indexOf("."),i=-1===o?n:o,a=-1===s?r:s,c=i-a;let l=c<0?-1*c:0,u=c<=0?0:c,f=Math.max(i,a)+1+Math.max(n-i,r-a)-1,g=0;for(;g<f;){const n=t[g-l]||"0",r=e[g-u]||"0";if(n!==r){if(n>r)return">";if(n<r)return"<"}g++}return"="}},89:(t,e,n)=>{const r=n(585),o=n(875),s=n(41);t.exports=function(t,e,n){t=o(t),e=o(e);const i="-"!==t[0],a="-"!==e[0],c=i!==a?"-":"";return i||(t=r(t)),a||(e=r(e)),c+s(t,e,n)}},604:t=>{t.exports=function(t){"+"===t[0]&&(t=t.substring(1));const e="-"===t[0]?"-":"";"-"===e&&(t=t.substring(1));const n=t.indexOf("e");if(-1===n)return e+t;let r=t.indexOf(".");-1===r&&(r=n);const o=Number(t.substring(n+1)),s=t.substring(0,n).replace(".",""),i=r+o,a=s.length;if(i>=a){const t=i-a;let n=s;for(let e=0;e<t;e++)n+="0";return e+n}if(i<0){result="0.";for(let t=0;t>i;t--)result+="0";return result+=s,e+result}return e+s.substring(0,i)+"."+s.substring(i)}},888:t=>{t.exports=function(t,e){const n=t.length,r=e.length,o=t.indexOf("."),s=e.indexOf("."),i=-1===o?n:o,a=-1===s?r:s,c=i-a;let l=Math.max(i,a),u=Math.max(n-i-1,r-a-1),f=c<0?-1*c:0,g=c<=0?0:c,h=l+1+u-1,p="",d=0,m=h;if(u>0){for(;m>h-u;){const n=t[m-f]||"0",r=e[m-g]||"0";let o=Number(n)+Number(r)+d;o>=10?(o-=10,d=1):d=0,""===p&&0===o||(p=o+p),m--}p&&(p="."+p),m--}if(l>0)for(;m>=0;){const n=t[m-f]||"0",r=e[m-g]||"0";let o=Number(n)+Number(r)+d;o>=10?(o-=10,d=1):d=0,p=o+p,m--}return 1===d&&(p=d+p),p}},41:(t,e,n)=>{const r=n(232),o=n(316),s=(n(494),n(42)),i=n(360);t.exports=function(t,e,{max_decimal_digits:n=100,ellipsis:a=!1}={}){"0"===t[0]&&(t=t.substring(1)),"0"===e[0]&&(e=e.substring(1));const c=t.indexOf("."),l=e.indexOf("."),u=-1===c?t.length:c,f=-1===l?0:e.length-1-l;let g=!1;t=t.replace(/\./,""),e=e.replace(/\./,"");const h=t.length;let p,d="",m="",x=-1*f,b=0;for(let n=0;n<h;n++)if(d+=t[n],p=r(d,e),">"===p){let t=1,n=o(e,e),i=e;for(;">"!==r(n,d);)t++,i=n,n=o(n,e);if(t=t.toString(),""!==m)for(let e=t.length;e<=b;e++)m+="0";m+=t,d=s(d,i),b=0}else{if("<"===p){""===m&&x++,b++;continue}if("="===p){if(""!==m)for(let t=0;t<b;t++)m+="0";m+="1",d="0",b=0}}if(d.match(/^0+$/g))"<"===p&&(m+=d.substring(0,d.length-1));else{const t={},i=u-x-m.length+n+1;""===m&&(b=0);for(let n=0;n<i;n++){if(d+="0",a)if(d in t){if(t[d]++,t[d]>3){m+="...",g=!0;break}}else t[d]=1;const n=r(d,e);if(">"===n){let t=1,n=o(e,e),i=e;for(;">"!==r(n,d);)t++,i=n,n=o(n,e);t=t.toString();for(let e=t.length;e<=b;e++)m+="0";if(m+=t,d=s(d,i),"0"===d)break;b=0}else{if("<"===n){b++;continue}if("="===n){for(let t=0;t<b;t++)m+="0";m+="1",b=0;break}}}}const w=u-x,y=m.length;let _;if(w===y)_=0;else if(w<0)m="0."+"0".repeat(Math.abs(w))+m,_=y-w;else if(w>y){for(let t=y;t<w;t++)m+="0";_=0}else w<y?(m=m.substring(0,w)+"."+m.substring(w),_=y-w):0===w&&(m="0."+m,_=y);if(m=m.replace(/^0+/,""),m=m.replace(/\.\d+0+$/,""),!g){const t=_-n;t>0&&(m=i(m.substring(0,m.length-t+1)))}return"."===m[0]&&(m="0"+m),m}},90:t=>{t.exports=function(t,e){if("0"===t||"0"===e)return"0";const n=t.indexOf("."),r=e.indexOf("."),o=(-1===n?0:t.length-1-n)+(-1===r?0:e.length-1-r);t=t.replace(".",""),e=e.replace(".","");const s=t.length,i=e.length,a=[];let c=s;for(;c>=0;){const e=c,n=c-=15,r=t.substring(n,e);a.push([Number(r),r.length])}const l=[],u=[];for(let t=0,n=i-1;n>=0;n--,t++){const r=e[n],o=Number(r);let s=0,i="";const c=a.length-1;a.forEach((([t,e],n)=>{let r=(s+o*t).toString();const a=r.length;if(a>e&&n!==c){const t=-1*e;i=r.slice(t)+i,s=Number(r.slice(0,t))}else{const t=e-a;for(let e=0;e<t;e++)r="0"+r;s=0,i=r+i}})),i+="0".repeat(t),l.push(i),u.push([Array.from(i).map((t=>Number(t))),i.length])}const f=l.length,g=u[u.length-1][1]+f;let h="",p=0;for(let t=0;t<g;t++){let e=p;const n=Math.min(t,f-1);for(let r=0;r<=n;r++){const[n,o]=u[r],s=o-1-t;s>=0&&(e+=n[s])}e>=10?(e=e.toString(),h=e[e.length-1]+h,p=Number(e.slice(0,-1))):(h=e+h,p=0)}if(0===o)h=h.replace(/^0+/,"");else{const t=h.length-o;h=h.substring(0,t)+"."+h.substring(t),h=h.replace(/^0+/,""),h=h.replace(/\.?0+$/,""),"."===h[0]&&(h="0"+h)}return h}},411:t=>{t.exports=function(t,e){const n=t.length,r=e.length,o=t.indexOf("."),s=e.indexOf("."),i=-1===o?n:o,a=-1===s?r:s,c=i-a;let l=Math.max(i,a),u=Math.max(n-i-1,r-a-1),f=c<0?-1*c:0,g=c<=0?0:c,h=l+1+u-1,p="",d=0,m=h;if(u>0){for(;m>h-u;){let n=t[m-f]||"0",r=e[m-g]||"0";n-=d,d=0;let o=n-r;if(o<0)for(;o<0;)d++,o+=10;else d&&d--;""===p&&0===o||(p=o+p),m--}""!==p&&(p="."+p),m--}if(l>0){for(;m>0;){let n=t[m-f]||"0",r=e[m-g]||"0";n-=d,d=0;let o=n-r;if(o<0)for(;o<0;)d++,o+=10;else d&&d--;p=o+p,m--}const n=t[0-f]||"0",r=e[0-g]||"0";let o=Number(n)-(d>0?1:0)-Number(r);0!==o&&(p=o+p),p=p.replace(/^0+/,"")}return"."===p[0]&&(p="0"+p),p}},494:(t,e,n)=>{const r=n(585),o=n(875),s=n(232),i=n(90);t.exports=function(t,e){t=o(t),e=o(e);const n="-"!==t[0]!=("-"!==e[0])?"-":"";if(t=r(t),e=r(e),"<"===s(t,e)){const n=t;t=e,e=n}return n+i(t,e)}},360:t=>{const e=["5","6","7","8","9"];t.exports=function(t){"+"===t[0]&&(t=t.substring(1));const n=t.length;let r="";const o=t[t.length-1];if(e.includes(o)){let e;for(e=n-2;e>=0;e--){const n=t[e];if("."===n||"-"===n)continue;const o=Number(n)+1;if(10!==o){r=o+r;break}r="0"+r}e>0&&(r=t.substring(0,e)+r)}else r=t.substring(0,n-1);return"."===r[r.length-1]&&(r=r.substring(0,r.length-1)),r.indexOf(".")>-1&&(r=r.replace(/0+$/,"")),r}},42:(t,e,n)=>{const r=n(875),o=n(232),s=n(888),i=n(411);t.exports=function(t,e){t=r(t),e=r(e);const n="-"!==t[0],a="-"!==e[0];if(n){if(a){const n=o(t,e);return">"===n?i(t,e):"<"===n?"-"+i(e,t):"0"}return s(t,e.substring(1))}if(a)return"-"+s(t.substring(1),e);{t=t.substring(1),e=e.substring(1);const n=o(t,e);return">"===n?"-"+i(t,e):"<"===n?i(e,t):"0"}}},482:(t,e,n)=>{var r;function o(t,{in_place:e=!1,reproject:n}){if("function"!=typeof n)throw new Error("[reproject-geojson] you must specify a reproject function");return!0!==e&&(t=(t=>JSON.parse(JSON.stringify(t)))(t)),"FeatureCollection"===t.type?t.features=t.features.map((t=>o(t,{in_place:e,reproject:n}))):"Feature"===t.type?t.geometry=o(t.geometry,{in_place:e,reproject:n}):"LineString"===t.type?t.coordinates=t.coordinates.map((t=>n(t))):"MultiLineString"===t.type?t.coordinates=t.coordinates.map((t=>t.map((t=>n(t))))):"MultiPoint"===t.type?t.coordinates=t.coordinates.map((t=>n(t))):"MultiPolygon"===t.type?t.coordinates=t.coordinates.map((t=>t.map((t=>t.map((t=>n(t))))))):"Point"===t.type?t.coordinates=n(t.coordinates):"Polygon"===t.type&&(t.coordinates=t.coordinates.map((t=>t.map((t=>n(t)))))),t}void 0===(r=function(){return o}.call(e,n,e,t))||(t.exports=r),t.exports=o,"object"==typeof window&&(window.reprojectGeoJSONPluggable=o),"object"==typeof self&&(self.reprojectGeoJSONPluggable=o)},905:(t,e,n)=>{var r;function o({segments:t,min:e=-1/0,max:n=1/0,debug:r=!1}){if(r&&console.log("[segflip] segs:",t),null==t||Array.isArray(t)&&0===t.length)return r&&console.log("[segflip] segments are empty so return the whole row flipped"),[[e,n]];const o=t.map((([t,e])=>[t-1,e+1])).flat();o.unshift(e),o.push(n),r&&console.log("flattened nums:",o);const s=[];for(let t=1;t<o.length;t+=2){const e=o[t-1],n=o[t];e>n||s.push([e,n])}return s}void 0===(r=function(){return o}.call(e,n,e,t))||(t.exports=r),t.exports=o,"object"==typeof window&&(window.segflip=o),"object"==typeof self&&(self.segflip=o)},895:t=>{function e({data:t,data_bbox:e,data_height:n,data_width:r,data_srs:o,debug:s=!1,geomask:i,mask:a,mask_srs:c,reproject:l,strategy:u="outside",edition:f}){if(!["inside","outside"].includes(u))throw new Error(`[geocanvas] strategy can be either "inside" or "outside". you provided "${u}"`);const{rows:g}=i[u]({raster_bbox:e,raster_height:n,raster_width:r,raster_srs:o,mask:a,mask_srs:c,reproject:l});g.forEach(((e,n)=>{if(e){const o=4*n*r;e.forEach((([e,n])=>{for(let r=e;r<=n;r++)t[o+4*r+3]=0}))}}))}t.exports={maskImageData:e,maskCanvas:function({canvas:t,canvas_bbox:n,canvas_srs:r,geomask:o,mask:s,mask_srs:i,reproject:a,strategy:c="outside",edition:l,debug:u=!1}){if(u&&console.log("[geocanvas] starting to mask canvas"),!["inside","outside"].includes(c))throw new Error(`[geocanvas] strategy can be either "inside" or "outside". you provided "${c}"`);const f=t.getContext("2d"),{height:g,width:h}=t;u&&console.log(`[geocanvas] canvas height is ${g} pixels`),u&&console.log(`[geocanvas] canvas width is ${h} pixels`);const p=f.getImageData(0,0,h,g);return e({data:p.data,data_bbox:n,data_height:g,data_srs:r,data_width:h,debug:u,geomask:o,mask:s,mask_srs:i,reproject:a,strategy:c}),u&&console.log("[geocanvas] image data after masking:",p),f.putImageData(p,0,0),u&&console.log("[geocanvas] put image data back"),t}}},317:(t,e,n)=>{var r;const o=n(143),s=n(895),i={maskImageData:function(t){return s.maskImageData({...t,edition:"lite",geomask:o})},maskCanvas:function(t){return s.maskCanvas({...t,edition:"lite",geomask:o})}};void 0===(r=function(){return i}.call(e,n,e,t))||(t.exports=r),t.exports=i,"object"==typeof self&&(self.geocanvas=i),"object"==typeof window&&(window.geocanvas=i)}},e={};!function n(r){var o=e[r];if(void 0!==o)return o.exports;var s=e[r]={exports:{}};return t[r](s,s.exports,n),s.exports}(317)})();
//# sourceMappingURL=geocanvas.lite.min.js.map